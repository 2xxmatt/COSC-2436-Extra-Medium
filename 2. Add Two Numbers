/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode temp;
        ListNode* tail= &temp;
        int carry = 0;

        ListNode* current_1 = l1;
        ListNode* current_2 = l2;

        while (current_1 != nullptr || current_2 != nullptr || carry != 0){
            int x = (current_1 ? current_1 -> val : 0);
            int y = (current_2 ? current_2 -> val : 0);
            int sum = x + y + carry;

            carry = sum / 10;
            int digit = sum % 10;

            tail -> next = new ListNode(digit);
            tail = tail -> next;

            if (current_1) current_1 = current_1 -> next;
            if (current_2) current_2 = current_2 -> next;
        }
        return temp.next;
    }
};
